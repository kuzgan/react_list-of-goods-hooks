{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","ALPHABET","sort","a","b","localeCompare","LENGTH","length","reverse","App","useState","setIsReversed","NONE","setSortType","className","type","classNames","onClick","prevState","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAWL,IAAME,EAAoB,SACxBC,EADwB,GAGpB,IADFC,EACC,EADDA,SAAUC,EACT,EADSA,WAENC,EAAY,YAAOH,GAczB,OAZIC,IAAaJ,EAASO,UACxBD,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAG1CN,IAAaJ,EAASY,QACxBN,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,OAASH,EAAEG,UAGvCR,GACFC,EAAaQ,UAGRR,GAGIS,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOX,EAAP,KAAmBY,EAAnB,KACA,EAAgCD,mBAAShB,EAASkB,MAAlD,mBAAOd,EAAP,KAAiBe,EAAjB,KAmBA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,CAAC,SAAU,WAC/B,CAAE,WAAYlB,IAAaJ,EAASO,WACtCgB,QAhBqB,WAC3BJ,EAAYnB,EAASO,WAWjB,iCASA,wBACEc,KAAK,SACLD,UAAWE,IAAW,CAAC,SAAU,cAC/B,CAAE,WAAYlB,IAAaJ,EAASY,SACtCW,QA7Be,WACrBJ,EAAYnB,EAASY,SAwBjB,4BASA,wBACES,KAAK,SACLD,UAAWE,IAAW,CAAC,SAAU,cAC/B,CAAE,YAAajB,IACjBkB,QA1Cc,WACpBN,GAAc,SAAAO,GAAS,OAAKA,MAqCxB,sBASEnB,GAAcD,IAAaJ,EAASkB,OAElC,wBACEG,KAAK,SACLD,UAAU,4BACVG,QAxCQ,WAClBJ,EAAYnB,EAASkB,MACrBD,GAAc,IAmCN,sBAUN,6BACGf,EAAkBD,EAAiB,CAAEG,WAAUC,eAC7CoB,KAAI,SAACC,GACJ,OACE,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YClHtCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.217963f5.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nconst getReorderedGoods = (\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) => {\n  const visibleGoods = [...goods];\n\n  if (sortType === SortType.ALPHABET) {\n    visibleGoods.sort((a, b) => a.localeCompare(b));\n  }\n\n  if (sortType === SortType.LENGTH) {\n    visibleGoods.sort((a, b) => a.length - b.length);\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n};\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const handleReverse = () => {\n    setIsReversed(prevState => !prevState);\n  };\n\n  const handleByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const handleAlphabetically = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const handleReset = () => {\n    setSortType(SortType.NONE);\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(['button', 'is-info'],\n            { 'is-light': sortType !== SortType.ALPHABET })}\n          onClick={handleAlphabetically}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(['button', 'is-success'],\n            { 'is-light': sortType !== SortType.LENGTH })}\n          onClick={handleByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(['button', 'is-warning'],\n            { 'is-light': !isReversed })}\n          onClick={handleReverse}\n        >\n          Reverse\n        </button>\n\n        {(isReversed || sortType !== SortType.NONE)\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={handleReset}\n            >\n              Reset\n            </button>\n          )}\n      </div>\n\n      <ul>\n        {getReorderedGoods(goodsFromServer, { sortType, isReversed })\n          .map((good) => {\n            return (\n              <li data-cy=\"Good\" key={good}>{good}</li>\n            );\n          })}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}